// Generated by sprotodump. DO NOT EDIT!
// source: proto_1_account.sproto

using System;
using Sproto;
using System.Collections.Generic;

namespace SprotoType { 
	public class account {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _account; // tag 0
			public Int64 account {
				get { return _account; }
				set { base.has_field.set_field (0, true); _account = value; }
			}
			public bool HasAccount {
				get { return base.has_field.has_field (0); }
			}

			private string _password; // tag 1
			public string password {
				get { return _password; }
				set { base.has_field.set_field (1, true); _password = value; }
			}
			public bool HasPassword {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.account = base.deserialize.read_integer ();
						break;
					case 1:
						this.password = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.account, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.password, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<select_role_info> _role_list; // tag 0
			public List<select_role_info> role_list {
				get { return _role_list; }
				set { base.has_field.set_field (0, true); _role_list = value; }
			}
			public bool HasRole_list {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.role_list = base.deserialize.read_obj_list<select_role_info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.role_list, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class create_npc_info : SprotoTypeBase {
		private static int max_field_count = 4;
		
		
		private Int64 _this_id; // tag 0
		public Int64 this_id {
			get { return _this_id; }
			set { base.has_field.set_field (0, true); _this_id = value; }
		}
		public bool HasThis_id {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _model_id; // tag 1
		public Int64 model_id {
			get { return _model_id; }
			set { base.has_field.set_field (1, true); _model_id = value; }
		}
		public bool HasModel_id {
			get { return base.has_field.has_field (1); }
		}

		private string _name; // tag 2
		public string name {
			get { return _name; }
			set { base.has_field.set_field (2, true); _name = value; }
		}
		public bool HasName {
			get { return base.has_field.has_field (2); }
		}

		private vector3 _pos; // tag 3
		public vector3 pos {
			get { return _pos; }
			set { base.has_field.set_field (3, true); _pos = value; }
		}
		public bool HasPos {
			get { return base.has_field.has_field (3); }
		}

		public create_npc_info () : base(max_field_count) {}

		public create_npc_info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.this_id = base.deserialize.read_integer ();
					break;
				case 1:
					this.model_id = base.deserialize.read_integer ();
					break;
				case 2:
					this.name = base.deserialize.read_string ();
					break;
				case 3:
					this.pos = base.deserialize.read_obj<vector3> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.this_id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.model_id, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.name, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_obj (this.pos, 3);
			}

			return base.serialize.close ();
		}
	}


	public class create_scene_role : SprotoTypeBase {
		private static int max_field_count = 5;
		
		
		private Int64 _this_id; // tag 0
		public Int64 this_id {
			get { return _this_id; }
			set { base.has_field.set_field (0, true); _this_id = value; }
		}
		public bool HasThis_id {
			get { return base.has_field.has_field (0); }
		}

		private string _name; // tag 1
		public string name {
			get { return _name; }
			set { base.has_field.set_field (1, true); _name = value; }
		}
		public bool HasName {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _model_id; // tag 2
		public Int64 model_id {
			get { return _model_id; }
			set { base.has_field.set_field (2, true); _model_id = value; }
		}
		public bool HasModel_id {
			get { return base.has_field.has_field (2); }
		}

		private vector3 _pos; // tag 3
		public vector3 pos {
			get { return _pos; }
			set { base.has_field.set_field (3, true); _pos = value; }
		}
		public bool HasPos {
			get { return base.has_field.has_field (3); }
		}

		private vector3 _face_to; // tag 4
		public vector3 face_to {
			get { return _face_to; }
			set { base.has_field.set_field (4, true); _face_to = value; }
		}
		public bool HasFace_to {
			get { return base.has_field.has_field (4); }
		}

		public create_scene_role () : base(max_field_count) {}

		public create_scene_role (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.this_id = base.deserialize.read_integer ();
					break;
				case 1:
					this.name = base.deserialize.read_string ();
					break;
				case 2:
					this.model_id = base.deserialize.read_integer ();
					break;
				case 3:
					this.pos = base.deserialize.read_obj<vector3> ();
					break;
				case 4:
					this.face_to = base.deserialize.read_obj<vector3> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.this_id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.name, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.model_id, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_obj (this.pos, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_obj (this.face_to, 4);
			}

			return base.serialize.close ();
		}
	}


	public class select_role {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _index; // tag 0
			public Int64 index {
				get { return _index; }
				set { base.has_field.set_field (0, true); _index = value; }
			}
			public bool HasIndex {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.index = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.index, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private create_scene_role _role; // tag 0
			public create_scene_role role {
				get { return _role; }
				set { base.has_field.set_field (0, true); _role = value; }
			}
			public bool HasRole {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _this_id; // tag 1
			public Int64 this_id {
				get { return _this_id; }
				set { base.has_field.set_field (1, true); _this_id = value; }
			}
			public bool HasThis_id {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _enter_map; // tag 2
			public Int64 enter_map {
				get { return _enter_map; }
				set { base.has_field.set_field (2, true); _enter_map = value; }
			}
			public bool HasEnter_map {
				get { return base.has_field.has_field (2); }
			}

			private List<create_npc_info> _npc_list; // tag 3
			public List<create_npc_info> npc_list {
				get { return _npc_list; }
				set { base.has_field.set_field (3, true); _npc_list = value; }
			}
			public bool HasNpc_list {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.role = base.deserialize.read_obj<create_scene_role> ();
						break;
					case 1:
						this.this_id = base.deserialize.read_integer ();
						break;
					case 2:
						this.enter_map = base.deserialize.read_integer ();
						break;
					case 3:
						this.npc_list = base.deserialize.read_obj_list<create_npc_info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.role, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.this_id, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.enter_map, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_obj (this.npc_list, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class select_role_info : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private string _name; // tag 0
		public string name {
			get { return _name; }
			set { base.has_field.set_field (0, true); _name = value; }
		}
		public bool HasName {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _model_id; // tag 1
		public Int64 model_id {
			get { return _model_id; }
			set { base.has_field.set_field (1, true); _model_id = value; }
		}
		public bool HasModel_id {
			get { return base.has_field.has_field (1); }
		}

		public select_role_info () : base(max_field_count) {}

		public select_role_info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.name = base.deserialize.read_string ();
					break;
				case 1:
					this.model_id = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.name, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.model_id, 1);
			}

			return base.serialize.close ();
		}
	}


	public class vector3 : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private double _x; // tag 0
		public double x {
			get { return _x; }
			set { base.has_field.set_field (0, true); _x = value; }
		}
		public bool HasX {
			get { return base.has_field.has_field (0); }
		}

		private double _y; // tag 1
		public double y {
			get { return _y; }
			set { base.has_field.set_field (1, true); _y = value; }
		}
		public bool HasY {
			get { return base.has_field.has_field (1); }
		}

		private double _z; // tag 2
		public double z {
			get { return _z; }
			set { base.has_field.set_field (2, true); _z = value; }
		}
		public bool HasZ {
			get { return base.has_field.has_field (2); }
		}

		public vector3 () : base(max_field_count) {}

		public vector3 (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.x = base.deserialize.read_double ();
					break;
				case 1:
					this.y = base.deserialize.read_double ();
					break;
				case 2:
					this.z = base.deserialize.read_double ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_double (this.x, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_double (this.y, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_double (this.z, 2);
			}

			return base.serialize.close ();
		}
	}


}


public class Protocol : ProtocolBase {
	public static  Protocol Instance = new Protocol();
	private Protocol() {
		Protocol.SetProtocol<account> (account.Tag);
		Protocol.SetRequest<SprotoType.account.request> (account.Tag);
		Protocol.SetResponse<SprotoType.account.response> (account.Tag);

		Protocol.SetProtocol<select_role> (select_role.Tag);
		Protocol.SetRequest<SprotoType.select_role.request> (select_role.Tag);
		Protocol.SetResponse<SprotoType.select_role.response> (select_role.Tag);

	}

	public class account {
		public const int Tag = 0;
	}

	public class select_role {
		public const int Tag = 1;
	}

}